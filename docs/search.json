[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Statistics",
    "section": "",
    "text": "Preface\nI read Mike X Cohen’s excellent book “Modern Statistics”, and now it’s time to practice myself.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "data/height.html",
    "href": "data/height.html",
    "title": "1  height data",
    "section": "",
    "text": "I found growth curves for girls and boys in Israel:\n\nurl girls, pdf girls\nurl boys, pdf boys\nurl both, png boys, png girls.\n\nFor example, see this:\n\nI used the great online resource Web Plot Digitizer v4 to extract the data from the images files. I captured the percentiles for boys and girls for ages 14 and 19:\n\ncsv boys 14\ncsv boys 19\ncsv girls 14\ncsv boys 19\n\nLet’s plot this data as cdfs.\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_theme(style=\"ticks\", font_scale=1.5)\nfrom scipy.optimize import curve_fit\nfrom scipy.special import erf\n# %matplotlib widget\n\n\ncdf19_boys = pd.read_csv('../archive/data/height_boys_19.csv',)\ncdf14_boys = pd.read_csv('../archive/data/height_boys_14.csv',)\ncdf19_girls = pd.read_csv('../archive/data/height_girls_19.csv',)\ncdf14_girls = pd.read_csv('../archive/data/height_girls_14.csv',)\n\n\ncdf19_boys\n\n\n\n\n\n\n\n\n\npercentile\nheight\n\n\n\n\n0\n0.1\n153.971963\n\n\n1\n3.0\n162.850467\n\n\n2\n5.0\n164.638070\n\n\n3\n10.0\n167.587131\n\n\n4\n15.0\n169.158879\n\n\n5\n25.0\n171.715818\n\n\n6\n50.0\n176.729223\n\n\n7\n75.0\n181.447721\n\n\n8\n85.0\n184.112150\n\n\n9\n90.0\n185.871314\n\n\n10\n95.0\n188.230563\n\n\n11\n97.0\n190.420561\n\n\n12\n99.9\n199.065421\n\n\n\n\n\n\n\n\n\nfig, ax = plt.subplots()\nax.plot(cdf14_boys['height'], cdf19_boys['percentile'], label=\"boys age 14\")\nax.plot(cdf19_boys['height'], cdf19_boys['percentile'], label=\"boys age 19\")\nax.plot(cdf14_girls['height'], cdf19_girls['percentile'], label=\"girls age 14\")\nax.plot(cdf19_girls['height'], cdf19_girls['percentile'], label=\"girls age 19\")\nax.legend(frameon=False)\nax.set(xlabel='height (cm)',\n       ylabel='percentile',\n       title='Height CDFs, Israel')\n\n[Text(0.5, 0, 'height (cm)'),\n Text(0, 0.5, 'percentile'),\n Text(0.5, 1.0, 'Height CDFs, Israel')]\n\n\n\n\n\n\n\n\n\nI would like to extract from the data the full cdf, for any height. I’ll try to fit each dataset to the cumulative distribution function of the gaussian (normal) distribution: \n\\Phi(x) = \\frac{1}{2} \\left( 1 + \\text{erf}\\left(\\frac{x - \\mu}{\\sigma \\sqrt{2}}\\right) \\right)\n where \\mu is the mean and \\sigma is the standard deviation of the distribution. The error function \\text{erf} is a sigmoid function, which is a good approximation for the cdf of the normal distribution.\n\ndef erf_model(x, mu, sigma):\n    return 50 * (1 + erf((x - mu) / (sigma * np.sqrt(2))) )\n# initial guess for parameters: [mu, sigma]\np0 = [150, 20]\n# fit the model\n\nparams14_boys, _ = curve_fit(erf_model, cdf14_boys['height'], cdf14_boys['percentile'], p0=p0)\nparams19_boys, _ = curve_fit(erf_model, cdf19_boys['height'], cdf19_boys['percentile'], p0=p0)\nparams14_girls, _ = curve_fit(erf_model, cdf14_girls['height'], cdf14_girls['percentile'], p0=p0)\nparams19_girls, _ = curve_fit(erf_model, cdf19_girls['height'], cdf19_girls['percentile'], p0=p0)\n\n# Calculate R-squared\ndef calculate_r2(y_true, y_pred):\n    ss_res = np.sum((y_true - y_pred) ** 2)\n    ss_tot = np.sum((y_true - np.mean(y_true)) ** 2)\n    return 1 - (ss_res / ss_tot)\n\n# Predicted values\ny_pred_14_boys = erf_model(cdf14_boys['height'], *params14_boys)\ny_pred_19_boys = erf_model(cdf19_boys['height'], *params19_boys)\ny_pred_14_girls = erf_model(cdf14_girls['height'], *params14_girls)\ny_pred_19_girls = erf_model(cdf19_girls['height'], *params19_girls)\n# R-squared value\nr2_14_boys = calculate_r2(cdf14_boys['percentile'], y_pred_14_boys)\nr2_19_boys = calculate_r2(cdf19_boys['percentile'], y_pred_19_boys)\nr2_14_girls = calculate_r2(cdf14_girls['percentile'], y_pred_14_girls)\nr2_19_girls = calculate_r2(cdf19_girls['percentile'], y_pred_19_girls)\n\nprint(f\"Boys, age 14: μ={params14_boys[0]:.0f}cm, σ={params14_boys[1]:.0f}cm, R-squared={r2_14_boys:.4e}\")\nprint(f\"Boys, age 19: μ={params19_boys[0]:.0f}cm, σ={params19_boys[1]:.0f}cm, R-squared={r2_19_boys:.4e}\")\nprint(f\"Gilrs, age 14: μ={params14_girls[0]:.0f}cm, σ={params14_girls[1]:.0f}cm, R-squared={r2_14_girls:.4e}\")\nprint(f\"Girls, age 19: μ={params19_girls[0]:.0f}cm, σ={params19_girls[1]:.0f}cm, R-squared={r2_19_girls:.4e}\")\n\nBoys, age 14: μ=164cm, σ=8cm, R-squared=9.9975e-01\nBoys, age 19: μ=177cm, σ=7cm, R-squared=9.9996e-01\nGilrs, age 14: μ=160cm, σ=7cm, R-squared=9.9966e-01\nGirls, age 19: μ=163cm, σ=6cm, R-squared=9.9998e-01\n\n\n\nfig, ax = plt.subplots()\nax.plot(cdf14_boys['height'], cdf19_boys['percentile'], label=\"boys age 14\", ls='None', marker='o')\nax.plot(cdf19_boys['height'], cdf19_boys['percentile'], label=\"boys age 19\", ls='None', marker='o')\nax.plot(cdf14_girls['height'], cdf19_girls['percentile'], label=\"girls age 14\", ls='None', marker='o')\nax.plot(cdf19_girls['height'], cdf19_girls['percentile'], label=\"girls age 19\", ls='None', marker='o')\n\nh = np.arange(130, 195, 1)\ncdf_fit_boys14 = erf_model(h, *params14_boys)\n\nax.plot(h, cdf_fit_boys14)\n\nax.legend(frameon=False, loc=\"upper left\")\nax.set(xlabel='height (cm)',\n       ylabel='percentile',\n       title='Height CDFs, Israel')\n\n[Text(0.5, 0, 'height (cm)'),\n Text(0, 0.5, 'percentile'),\n Text(0.5, 1.0, 'Height CDFs, Israel')]",
    "crumbs": [
      "data",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>height data</span>"
    ]
  }
]